{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { deleteTasks, fetchTasks, postTask, switchTask } from \"../helper/axiosHelper\";\nimport { setTaskList } from \"./taskSlice\";\nexport const getTaskList = () => async dispatch => {\n  const {\n    status,\n    taskList\n  } = await fetchTasks();\n  if (status === \"success\") {\n    // setList(taskList);\n    dispatch(setTaskList(taskList));\n  }\n};\nexport const addTaskList = taskObj => async dispatch => {\n  try {\n    //send data to the api\n    const respPromise = postTask(taskObj);\n    toast.promise(respPromise, {\n      pending: \"please wait....\"\n    });\n    const {\n      status,\n      message\n    } = await respPromise;\n    console.log(status);\n    toast[status](message);\n    if (status === \"success\") {\n      //call the api to fetch all the tasks\n      dispatch(getTaskList());\n    }\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\nexport const updateTask = taskObj => async dispatch => {\n  const dataPending = switchTask(taskObj);\n  toast.promise(dataPending, {\n    pending: \"Please wait ...\"\n  });\n  const {\n    status,\n    message\n  } = await dataPending;\n  toast[status](message);\n  if (status === \"success\") {\n    dispatch(getTaskList());\n  }\n};\nexport const deleteTaskAction = ids => async dispatch => {\n  const pendigResp = deleteTasks(ids);\n  toast.promise(pendigResp, {\n    pending: \"Please wait...\"\n  });\n  const {\n    status,\n    message\n  } = await pendigResp;\n  toast[status](message);\n  if (status === \"success\") {\n    dispatch(getTaskList());\n  }\n};","map":{"version":3,"names":["toast","deleteTasks","fetchTasks","postTask","switchTask","setTaskList","getTaskList","dispatch","status","taskList","addTaskList","taskObj","respPromise","promise","pending","message","console","log","error","updateTask","dataPending","deleteTaskAction","ids","pendigResp"],"sources":["/Users/milan_edvision/Documents/BtCmp Learning/ntdl full stack/client/src/redux/taskAction.js"],"sourcesContent":["import { toast } from \"react-toastify\";\nimport {\n  deleteTasks,\n  fetchTasks,\n  postTask,\n  switchTask,\n} from \"../helper/axiosHelper\";\nimport { setTaskList } from \"./taskSlice\";\n\nexport const getTaskList = () => async (dispatch) => {\n  const { status, taskList } = await fetchTasks();\n\n  if (status === \"success\") {\n    // setList(taskList);\n    dispatch(setTaskList(taskList));\n  }\n};\n\nexport const addTaskList = (taskObj) => async (dispatch) => {\n  try {\n    //send data to the api\n    const respPromise = postTask(taskObj);\n\n    toast.promise(respPromise, {\n      pending: \"please wait....\",\n    });\n    const { status, message } = await respPromise;\n\n    console.log(status)\n    toast[status](message);\n\n    if (status === \"success\") {\n      //call the api to fetch all the tasks\n      dispatch(getTaskList());\n    }\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const updateTask = (taskObj) => async (dispatch) => {\n  const dataPending = switchTask(taskObj);\n\n  toast.promise(dataPending, {\n    pending: \"Please wait ...\",\n  });\n\n  const { status, message } = await dataPending;\n  toast[status](message);\n\n  if (status === \"success\") {\n    dispatch(getTaskList());\n  }\n};\n\nexport const deleteTaskAction = (ids) => async (dispatch) => {\n  const pendigResp = deleteTasks(ids);\n\n  toast.promise(pendigResp, {\n    pending: \"Please wait...\",\n  });\n\n  const { status, message } = await pendigResp;\n  toast[status](message);\n\n  if (status === \"success\") {\n    dispatch(getTaskList());\n  }\n};\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SACEC,WAAW,EACXC,UAAU,EACVC,QAAQ,EACRC,UAAU,QACL,uBAAuB;AAC9B,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACnD,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAG,MAAMP,UAAU,CAAC,CAAC;EAE/C,IAAIM,MAAM,KAAK,SAAS,EAAE;IACxB;IACAD,QAAQ,CAACF,WAAW,CAACI,QAAQ,CAAC,CAAC;EACjC;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAK,MAAOJ,QAAQ,IAAK;EAC1D,IAAI;IACF;IACA,MAAMK,WAAW,GAAGT,QAAQ,CAACQ,OAAO,CAAC;IAErCX,KAAK,CAACa,OAAO,CAACD,WAAW,EAAE;MACzBE,OAAO,EAAE;IACX,CAAC,CAAC;IACF,MAAM;MAAEN,MAAM;MAAEO;IAAQ,CAAC,GAAG,MAAMH,WAAW;IAE7CI,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACnBR,KAAK,CAACQ,MAAM,CAAC,CAACO,OAAO,CAAC;IAEtB,IAAIP,MAAM,KAAK,SAAS,EAAE;MACxB;MACAD,QAAQ,CAACD,WAAW,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdlB,KAAK,CAACkB,KAAK,CAACA,KAAK,CAACH,OAAO,CAAC;EAC5B;AACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAIR,OAAO,IAAK,MAAOJ,QAAQ,IAAK;EACzD,MAAMa,WAAW,GAAGhB,UAAU,CAACO,OAAO,CAAC;EAEvCX,KAAK,CAACa,OAAO,CAACO,WAAW,EAAE;IACzBN,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM;IAAEN,MAAM;IAAEO;EAAQ,CAAC,GAAG,MAAMK,WAAW;EAC7CpB,KAAK,CAACQ,MAAM,CAAC,CAACO,OAAO,CAAC;EAEtB,IAAIP,MAAM,KAAK,SAAS,EAAE;IACxBD,QAAQ,CAACD,WAAW,CAAC,CAAC,CAAC;EACzB;AACF,CAAC;AAED,OAAO,MAAMe,gBAAgB,GAAIC,GAAG,IAAK,MAAOf,QAAQ,IAAK;EAC3D,MAAMgB,UAAU,GAAGtB,WAAW,CAACqB,GAAG,CAAC;EAEnCtB,KAAK,CAACa,OAAO,CAACU,UAAU,EAAE;IACxBT,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAM;IAAEN,MAAM;IAAEO;EAAQ,CAAC,GAAG,MAAMQ,UAAU;EAC5CvB,KAAK,CAACQ,MAAM,CAAC,CAACO,OAAO,CAAC;EAEtB,IAAIP,MAAM,KAAK,SAAS,EAAE;IACxBD,QAAQ,CAACD,WAAW,CAAC,CAAC,CAAC;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}